// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Continent int32

const (
	Continent_EUROPE        Continent = 0
	Continent_ASIA          Continent = 1
	Continent_AFRICA        Continent = 2
	Continent_NORTH_AMERICA Continent = 3
	Continent_SOUTH_AMERICA Continent = 4
	Continent_OCEANIA       Continent = 5
)

var Continent_name = map[int32]string{
	0: "EUROPE",
	1: "ASIA",
	2: "AFRICA",
	3: "NORTH_AMERICA",
	4: "SOUTH_AMERICA",
	5: "OCEANIA",
}

var Continent_value = map[string]int32{
	"EUROPE":        0,
	"ASIA":          1,
	"AFRICA":        2,
	"NORTH_AMERICA": 3,
	"SOUTH_AMERICA": 4,
	"OCEANIA":       5,
}

func (x Continent) String() string {
	return proto.EnumName(Continent_name, int32(x))
}

func (Continent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

type Delta struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Delta) Reset()         { *m = Delta{} }
func (m *Delta) String() string { return proto.CompactTextString(m) }
func (*Delta) ProtoMessage()    {}
func (*Delta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *Delta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delta.Unmarshal(m, b)
}
func (m *Delta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delta.Marshal(b, m, deterministic)
}
func (m *Delta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delta.Merge(m, src)
}
func (m *Delta) XXX_Size() int {
	return xxx_messageInfo_Delta.Size(m)
}
func (m *Delta) XXX_DiscardUnknown() {
	xxx_messageInfo_Delta.DiscardUnknown(m)
}

var xxx_messageInfo_Delta proto.InternalMessageInfo

func (m *Delta) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ContinentDelta struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Targets              map[string]*Delta `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContinentDelta) Reset()         { *m = ContinentDelta{} }
func (m *ContinentDelta) String() string { return proto.CompactTextString(m) }
func (*ContinentDelta) ProtoMessage()    {}
func (*ContinentDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *ContinentDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinentDelta.Unmarshal(m, b)
}
func (m *ContinentDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinentDelta.Marshal(b, m, deterministic)
}
func (m *ContinentDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinentDelta.Merge(m, src)
}
func (m *ContinentDelta) XXX_Size() int {
	return xxx_messageInfo_ContinentDelta.Size(m)
}
func (m *ContinentDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinentDelta.DiscardUnknown(m)
}

var xxx_messageInfo_ContinentDelta proto.InternalMessageInfo

func (m *ContinentDelta) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ContinentDelta) GetTargets() map[string]*Delta {
	if m != nil {
		return m.Targets
	}
	return nil
}

type CountryDelta struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Targets              map[string]*Delta `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CountryDelta) Reset()         { *m = CountryDelta{} }
func (m *CountryDelta) String() string { return proto.CompactTextString(m) }
func (*CountryDelta) ProtoMessage()    {}
func (*CountryDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *CountryDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryDelta.Unmarshal(m, b)
}
func (m *CountryDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryDelta.Marshal(b, m, deterministic)
}
func (m *CountryDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryDelta.Merge(m, src)
}
func (m *CountryDelta) XXX_Size() int {
	return xxx_messageInfo_CountryDelta.Size(m)
}
func (m *CountryDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryDelta.DiscardUnknown(m)
}

var xxx_messageInfo_CountryDelta proto.InternalMessageInfo

func (m *CountryDelta) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CountryDelta) GetTargets() map[string]*Delta {
	if m != nil {
		return m.Targets
	}
	return nil
}

type CityDelta struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Targets              map[string]*Delta `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CityDelta) Reset()         { *m = CityDelta{} }
func (m *CityDelta) String() string { return proto.CompactTextString(m) }
func (*CityDelta) ProtoMessage()    {}
func (*CityDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *CityDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityDelta.Unmarshal(m, b)
}
func (m *CityDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityDelta.Marshal(b, m, deterministic)
}
func (m *CityDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityDelta.Merge(m, src)
}
func (m *CityDelta) XXX_Size() int {
	return xxx_messageInfo_CityDelta.Size(m)
}
func (m *CityDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_CityDelta.DiscardUnknown(m)
}

var xxx_messageInfo_CityDelta proto.InternalMessageInfo

func (m *CityDelta) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CityDelta) GetTargets() map[string]*Delta {
	if m != nil {
		return m.Targets
	}
	return nil
}

func init() {
	proto.RegisterEnum("internal.Continent", Continent_name, Continent_value)
	proto.RegisterType((*Delta)(nil), "internal.Delta")
	proto.RegisterType((*ContinentDelta)(nil), "internal.ContinentDelta")
	proto.RegisterMapType((map[string]*Delta)(nil), "internal.ContinentDelta.TargetsEntry")
	proto.RegisterType((*CountryDelta)(nil), "internal.CountryDelta")
	proto.RegisterMapType((map[string]*Delta)(nil), "internal.CountryDelta.TargetsEntry")
	proto.RegisterType((*CityDelta)(nil), "internal.CityDelta")
	proto.RegisterMapType((map[string]*Delta)(nil), "internal.CityDelta.TargetsEntry")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0xed, 0x1a, 0xcc, 0xc7, 0xf0, 0x51, 0x77, 0x5b, 0x21, 0xe4, 0xaa, 0x12, 0xa2, 0x42, 0x42,
	0x3d, 0x18, 0x89, 0x5e, 0x5a, 0xa4, 0x0a, 0xb9, 0xae, 0xab, 0xa0, 0x28, 0x38, 0x32, 0xa0, 0x1c,
	0x13, 0x13, 0x6d, 0x8c, 0x85, 0xb3, 0x8b, 0xec, 0x25, 0x92, 0x7f, 0x5b, 0x4e, 0x39, 0xe4, 0x90,
	0x7f, 0x15, 0xd9, 0x8b, 0x83, 0x83, 0xe0, 0xc0, 0x85, 0x9b, 0xe7, 0xed, 0xdb, 0x37, 0xef, 0x79,
	0x76, 0xa0, 0x1a, 0x12, 0x27, 0xb8, 0x5d, 0x68, 0xab, 0x80, 0x71, 0x86, 0x4b, 0x1e, 0xe5, 0x24,
	0xa0, 0x8e, 0xaf, 0x7e, 0x75, 0x19, 0x73, 0x7d, 0xd2, 0x4b, 0xf0, 0xf9, 0xfa, 0xae, 0x47, 0xee,
	0x57, 0x3c, 0x12, 0x34, 0xb5, 0x16, 0x92, 0x30, 0xf4, 0x18, 0x15, 0x65, 0xfb, 0x1b, 0xc8, 0xff,
	0x88, 0xcf, 0x1d, 0xfc, 0x05, 0xe4, 0x07, 0xc7, 0x5f, 0x93, 0x26, 0x6a, 0xa1, 0xae, 0x6c, 0x8b,
	0xa2, 0xfd, 0x8c, 0xa0, 0x6e, 0x30, 0xca, 0x3d, 0x4a, 0x28, 0x17, 0xc4, 0x0e, 0xc8, 0x9c, 0x2d,
	0x09, 0x4d, 0x88, 0x95, 0xfe, 0x47, 0x2d, 0xed, 0xab, 0x4d, 0x63, 0xd8, 0x16, 0xa7, 0x78, 0x08,
	0x45, 0xee, 0x04, 0x2e, 0xe1, 0x61, 0x53, 0x6a, 0xe5, 0xba, 0x95, 0x7e, 0x67, 0x4b, 0x7c, 0xaf,
	0xa8, 0x4d, 0x05, 0xcf, 0xa4, 0x3c, 0x88, 0xec, 0xf4, 0x96, 0x7a, 0x0e, 0xd5, 0xec, 0x01, 0x56,
	0x20, 0xb7, 0x24, 0x51, 0xd2, 0xb5, 0x6c, 0xc7, 0x9f, 0xb1, 0x13, 0x61, 0x59, 0xda, 0x75, 0x92,
	0xe8, 0x6e, 0x32, 0x0c, 0xa4, 0x5f, 0xa8, 0xfd, 0x84, 0xa0, 0x6a, 0xb0, 0x75, 0x2c, 0x74, 0x54,
	0x8a, 0x3f, 0xbb, 0x29, 0xbe, 0x67, 0x53, 0x6c, 0xf5, 0x4e, 0x91, 0xe1, 0x11, 0x41, 0xd9, 0xf0,
	0xf8, 0x71, 0x01, 0x06, 0xbb, 0x01, 0x5a, 0x99, 0x00, 0xa9, 0xd8, 0x09, 0xdc, 0xff, 0xb8, 0x81,
	0xf2, 0xdb, 0xd8, 0x31, 0x40, 0xc1, 0x9c, 0xd9, 0xd6, 0xa5, 0xa9, 0x7c, 0xc0, 0x25, 0xc8, 0xeb,
	0x93, 0x91, 0xae, 0xa0, 0x18, 0xd5, 0xff, 0xdb, 0x23, 0x43, 0x57, 0x24, 0xfc, 0x09, 0x6a, 0x63,
	0xcb, 0x9e, 0x9e, 0x5d, 0xeb, 0x17, 0x66, 0x02, 0xe5, 0x62, 0x68, 0x62, 0xcd, 0x32, 0x50, 0x1e,
	0x57, 0xa0, 0x68, 0x19, 0xa6, 0x3e, 0x1e, 0xe9, 0x8a, 0xdc, 0x7f, 0x41, 0x50, 0xbc, 0x22, 0x9e,
	0xbb, 0xe0, 0x21, 0xfe, 0x0b, 0x75, 0x63, 0xe1, 0x50, 0x97, 0x6c, 0x7a, 0x72, 0xdc, 0x3c, 0xf4,
	0xfc, 0xd4, 0x86, 0x26, 0xf6, 0x45, 0x4b, 0xf7, 0x45, 0x33, 0xe3, 0x7d, 0xc1, 0x43, 0xa8, 0xa5,
	0x1a, 0xc9, 0xa0, 0x71, 0x63, 0xff, 0xec, 0x0f, 0x0a, 0xfc, 0x06, 0xd8, 0x08, 0x78, 0x3c, 0xc2,
	0x9f, 0xf7, 0xfc, 0xf8, 0x43, 0x57, 0xe7, 0x85, 0xa4, 0xfe, 0xf9, 0x1a, 0x00, 0x00, 0xff, 0xff,
	0x31, 0x61, 0xcd, 0x93, 0xe3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WeightsClient is the client API for Weights service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WeightsClient interface {
	ChangeContinet(ctx context.Context, in *ContinentDelta, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeCountry(ctx context.Context, in *CountryDelta, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeCity(ctx context.Context, in *CityDelta, opts ...grpc.CallOption) (*empty.Empty, error)
}

type weightsClient struct {
	cc *grpc.ClientConn
}

func NewWeightsClient(cc *grpc.ClientConn) WeightsClient {
	return &weightsClient{cc}
}

func (c *weightsClient) ChangeContinet(ctx context.Context, in *ContinentDelta, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Weights/ChangeContinet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *weightsClient) ChangeCountry(ctx context.Context, in *CountryDelta, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Weights/ChangeCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *weightsClient) ChangeCity(ctx context.Context, in *CityDelta, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Weights/ChangeCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WeightsServer is the server API for Weights service.
type WeightsServer interface {
	ChangeContinet(context.Context, *ContinentDelta) (*empty.Empty, error)
	ChangeCountry(context.Context, *CountryDelta) (*empty.Empty, error)
	ChangeCity(context.Context, *CityDelta) (*empty.Empty, error)
}

// UnimplementedWeightsServer can be embedded to have forward compatible implementations.
type UnimplementedWeightsServer struct {
}

func (*UnimplementedWeightsServer) ChangeContinet(ctx context.Context, req *ContinentDelta) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeContinet not implemented")
}
func (*UnimplementedWeightsServer) ChangeCountry(ctx context.Context, req *CountryDelta) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCountry not implemented")
}
func (*UnimplementedWeightsServer) ChangeCity(ctx context.Context, req *CityDelta) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCity not implemented")
}

func RegisterWeightsServer(s *grpc.Server, srv WeightsServer) {
	s.RegisterService(&_Weights_serviceDesc, srv)
}

func _Weights_ChangeContinet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContinentDelta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).ChangeContinet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/ChangeContinet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).ChangeContinet(ctx, req.(*ContinentDelta))
	}
	return interceptor(ctx, in, info, handler)
}

func _Weights_ChangeCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountryDelta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).ChangeCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/ChangeCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).ChangeCountry(ctx, req.(*CountryDelta))
	}
	return interceptor(ctx, in, info, handler)
}

func _Weights_ChangeCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityDelta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).ChangeCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/ChangeCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).ChangeCity(ctx, req.(*CityDelta))
	}
	return interceptor(ctx, in, info, handler)
}

var _Weights_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.Weights",
	HandlerType: (*WeightsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeContinet",
			Handler:    _Weights_ChangeContinet_Handler,
		},
		{
			MethodName: "ChangeCountry",
			Handler:    _Weights_ChangeCountry_Handler,
		},
		{
			MethodName: "ChangeCity",
			Handler:    _Weights_ChangeCity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
