// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Delta struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Delta) Reset()         { *m = Delta{} }
func (m *Delta) String() string { return proto.CompactTextString(m) }
func (*Delta) ProtoMessage()    {}
func (*Delta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *Delta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delta.Unmarshal(m, b)
}
func (m *Delta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delta.Marshal(b, m, deterministic)
}
func (m *Delta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delta.Merge(m, src)
}
func (m *Delta) XXX_Size() int {
	return xxx_messageInfo_Delta.Size(m)
}
func (m *Delta) XXX_DiscardUnknown() {
	xxx_messageInfo_Delta.DiscardUnknown(m)
}

var xxx_messageInfo_Delta proto.InternalMessageInfo

func (m *Delta) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ContinentDelta struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Targets              map[string]*Delta `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContinentDelta) Reset()         { *m = ContinentDelta{} }
func (m *ContinentDelta) String() string { return proto.CompactTextString(m) }
func (*ContinentDelta) ProtoMessage()    {}
func (*ContinentDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *ContinentDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinentDelta.Unmarshal(m, b)
}
func (m *ContinentDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinentDelta.Marshal(b, m, deterministic)
}
func (m *ContinentDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinentDelta.Merge(m, src)
}
func (m *ContinentDelta) XXX_Size() int {
	return xxx_messageInfo_ContinentDelta.Size(m)
}
func (m *ContinentDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinentDelta.DiscardUnknown(m)
}

var xxx_messageInfo_ContinentDelta proto.InternalMessageInfo

func (m *ContinentDelta) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ContinentDelta) GetTargets() map[string]*Delta {
	if m != nil {
		return m.Targets
	}
	return nil
}

type CountryDelta struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Targets              map[string]*Delta `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CountryDelta) Reset()         { *m = CountryDelta{} }
func (m *CountryDelta) String() string { return proto.CompactTextString(m) }
func (*CountryDelta) ProtoMessage()    {}
func (*CountryDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *CountryDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryDelta.Unmarshal(m, b)
}
func (m *CountryDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryDelta.Marshal(b, m, deterministic)
}
func (m *CountryDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryDelta.Merge(m, src)
}
func (m *CountryDelta) XXX_Size() int {
	return xxx_messageInfo_CountryDelta.Size(m)
}
func (m *CountryDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryDelta.DiscardUnknown(m)
}

var xxx_messageInfo_CountryDelta proto.InternalMessageInfo

func (m *CountryDelta) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CountryDelta) GetTargets() map[string]*Delta {
	if m != nil {
		return m.Targets
	}
	return nil
}

type CityDelta struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Targets              map[string]*Delta `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CityDelta) Reset()         { *m = CityDelta{} }
func (m *CityDelta) String() string { return proto.CompactTextString(m) }
func (*CityDelta) ProtoMessage()    {}
func (*CityDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *CityDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityDelta.Unmarshal(m, b)
}
func (m *CityDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityDelta.Marshal(b, m, deterministic)
}
func (m *CityDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityDelta.Merge(m, src)
}
func (m *CityDelta) XXX_Size() int {
	return xxx_messageInfo_CityDelta.Size(m)
}
func (m *CityDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_CityDelta.DiscardUnknown(m)
}

var xxx_messageInfo_CityDelta proto.InternalMessageInfo

func (m *CityDelta) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CityDelta) GetTargets() map[string]*Delta {
	if m != nil {
		return m.Targets
	}
	return nil
}

type City struct {
	Iata                 string   `protobuf:"bytes,1,opt,name=iata,proto3" json:"iata,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CountryCode          string   `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Photo                string   `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *City) Reset()         { *m = City{} }
func (m *City) String() string { return proto.CompactTextString(m) }
func (*City) ProtoMessage()    {}
func (*City) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{4}
}

func (m *City) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_City.Unmarshal(m, b)
}
func (m *City) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_City.Marshal(b, m, deterministic)
}
func (m *City) XXX_Merge(src proto.Message) {
	xxx_messageInfo_City.Merge(m, src)
}
func (m *City) XXX_Size() int {
	return xxx_messageInfo_City.Size(m)
}
func (m *City) XXX_DiscardUnknown() {
	xxx_messageInfo_City.DiscardUnknown(m)
}

var xxx_messageInfo_City proto.InternalMessageInfo

func (m *City) GetIata() string {
	if m != nil {
		return m.Iata
	}
	return ""
}

func (m *City) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *City) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *City) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

type ResultRequest struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PageSize             uint32   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Offset               uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultRequest) Reset()         { *m = ResultRequest{} }
func (m *ResultRequest) String() string { return proto.CompactTextString(m) }
func (*ResultRequest) ProtoMessage()    {}
func (*ResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{5}
}

func (m *ResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultRequest.Unmarshal(m, b)
}
func (m *ResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultRequest.Marshal(b, m, deterministic)
}
func (m *ResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultRequest.Merge(m, src)
}
func (m *ResultRequest) XXX_Size() int {
	return xxx_messageInfo_ResultRequest.Size(m)
}
func (m *ResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResultRequest proto.InternalMessageInfo

func (m *ResultRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ResultRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ResultRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Cities struct {
	Values               []*City  `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cities) Reset()         { *m = Cities{} }
func (m *Cities) String() string { return proto.CompactTextString(m) }
func (*Cities) ProtoMessage()    {}
func (*Cities) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{6}
}

func (m *Cities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cities.Unmarshal(m, b)
}
func (m *Cities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cities.Marshal(b, m, deterministic)
}
func (m *Cities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cities.Merge(m, src)
}
func (m *Cities) XXX_Size() int {
	return xxx_messageInfo_Cities.Size(m)
}
func (m *Cities) XXX_DiscardUnknown() {
	xxx_messageInfo_Cities.DiscardUnknown(m)
}

var xxx_messageInfo_Cities proto.InternalMessageInfo

func (m *Cities) GetValues() []*City {
	if m != nil {
		return m.Values
	}
	return nil
}

type AnswerRequest struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Iata                 string   `protobuf:"bytes,2,opt,name=iata,proto3" json:"iata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnswerRequest) Reset()         { *m = AnswerRequest{} }
func (m *AnswerRequest) String() string { return proto.CompactTextString(m) }
func (*AnswerRequest) ProtoMessage()    {}
func (*AnswerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{7}
}

func (m *AnswerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerRequest.Unmarshal(m, b)
}
func (m *AnswerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerRequest.Marshal(b, m, deterministic)
}
func (m *AnswerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerRequest.Merge(m, src)
}
func (m *AnswerRequest) XXX_Size() int {
	return xxx_messageInfo_AnswerRequest.Size(m)
}
func (m *AnswerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerRequest proto.InternalMessageInfo

func (m *AnswerRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *AnswerRequest) GetIata() string {
	if m != nil {
		return m.Iata
	}
	return ""
}

func init() {
	proto.RegisterType((*Delta)(nil), "internal.Delta")
	proto.RegisterType((*ContinentDelta)(nil), "internal.ContinentDelta")
	proto.RegisterMapType((map[string]*Delta)(nil), "internal.ContinentDelta.TargetsEntry")
	proto.RegisterType((*CountryDelta)(nil), "internal.CountryDelta")
	proto.RegisterMapType((map[string]*Delta)(nil), "internal.CountryDelta.TargetsEntry")
	proto.RegisterType((*CityDelta)(nil), "internal.CityDelta")
	proto.RegisterMapType((map[string]*Delta)(nil), "internal.CityDelta.TargetsEntry")
	proto.RegisterType((*City)(nil), "internal.City")
	proto.RegisterType((*ResultRequest)(nil), "internal.ResultRequest")
	proto.RegisterType((*Cities)(nil), "internal.Cities")
	proto.RegisterType((*AnswerRequest)(nil), "internal.AnswerRequest")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xfa, 0xb5, 0xf5, 0xb6, 0xd9, 0x26, 0x83, 0x4a, 0x14, 0x84, 0x54, 0x05, 0x0d, 0xed,
	0x29, 0x43, 0xdd, 0x0b, 0x4c, 0x42, 0x15, 0xca, 0x26, 0x24, 0x78, 0xc2, 0x4c, 0xe2, 0xd9, 0xdb,
	0x6e, 0xd3, 0xb0, 0xd4, 0x2e, 0xf1, 0x2d, 0xa8, 0x88, 0x7f, 0xc6, 0x13, 0x0f, 0xfc, 0x2e, 0x90,
	0xed, 0x64, 0xfd, 0x60, 0x95, 0xd6, 0x97, 0xbd, 0xf9, 0x7e, 0xf8, 0xf8, 0x9c, 0xe3, 0x6b, 0x43,
	0x57, 0xa3, 0x28, 0xae, 0xc6, 0xf1, 0xb4, 0x50, 0xa4, 0xd8, 0x6e, 0x26, 0x09, 0x0b, 0x29, 0xf2,
	0xf0, 0x69, 0xaa, 0x54, 0x9a, 0xe3, 0xb1, 0xcd, 0x5f, 0xce, 0x46, 0xc7, 0x38, 0x99, 0xd2, 0xdc,
	0xb5, 0x85, 0xbe, 0x46, 0xad, 0x33, 0x25, 0x5d, 0x18, 0x3d, 0x83, 0xe6, 0x19, 0xe6, 0x24, 0xd8,
	0x63, 0x68, 0x7e, 0x13, 0xf9, 0x0c, 0x03, 0xaf, 0xef, 0x1d, 0x35, 0xb9, 0x0b, 0xa2, 0x3f, 0x1e,
	0xec, 0x25, 0x4a, 0x52, 0x26, 0x51, 0x92, 0x6b, 0x3c, 0x84, 0x26, 0xa9, 0x1b, 0x94, 0xb6, 0xb1,
	0x33, 0xd8, 0x8f, 0xab, 0x73, 0xe3, 0x0b, 0x93, 0xe6, 0xae, 0xca, 0x86, 0xb0, 0x43, 0xa2, 0x48,
	0x91, 0x74, 0x50, 0xeb, 0xd7, 0x8f, 0x3a, 0x83, 0xc3, 0x45, 0xe3, 0x2a, 0x62, 0x7c, 0xe1, 0xfa,
	0xce, 0x25, 0x15, 0x73, 0x5e, 0xed, 0x0a, 0x3f, 0x40, 0x77, 0xb9, 0xc0, 0x0e, 0xa0, 0x7e, 0x83,
	0x73, 0x7b, 0x6a, 0x9b, 0x9b, 0xa5, 0x61, 0xe2, 0x28, 0xd7, 0xd6, 0x99, 0x58, 0xdc, 0x52, 0xc3,
	0x69, 0xed, 0x95, 0x17, 0xfd, 0xf6, 0xa0, 0x9b, 0xa8, 0x99, 0x01, 0xda, 0x4a, 0xc5, 0x9b, 0x75,
	0x15, 0xcf, 0x97, 0x55, 0x2c, 0xf0, 0x1e, 0x42, 0xc3, 0x2f, 0x0f, 0xda, 0x49, 0x46, 0xdb, 0x09,
	0x38, 0x5d, 0x17, 0xd0, 0x5f, 0x12, 0x50, 0x81, 0x3d, 0x04, 0xfb, 0x11, 0x34, 0xcc, 0x79, 0x8c,
	0x41, 0x23, 0x13, 0x24, 0x4a, 0x14, 0xbb, 0x36, 0x39, 0x29, 0x26, 0x0e, 0xa5, 0xcd, 0xed, 0x9a,
	0xf5, 0xa1, 0x73, 0xe5, 0x0c, 0x4e, 0xd4, 0x35, 0x06, 0x75, 0x5b, 0x5a, 0x4e, 0x99, 0x89, 0x9d,
	0x8e, 0x15, 0xa9, 0xa0, 0x61, 0x6b, 0x2e, 0x88, 0xbe, 0x80, 0xcf, 0x51, 0xcf, 0x72, 0xe2, 0xf8,
	0x75, 0x86, 0x9a, 0xee, 0x6b, 0x54, 0x08, 0xbb, 0x53, 0x91, 0xe2, 0xa7, 0xec, 0x87, 0xe3, 0xe1,
	0xf3, 0xdb, 0x98, 0xf5, 0xa0, 0xa5, 0x46, 0x23, 0x8d, 0x64, 0x69, 0xf8, 0xbc, 0x8c, 0xa2, 0x97,
	0xd0, 0x4a, 0x32, 0xca, 0x50, 0xb3, 0x17, 0xd0, 0xb2, 0x52, 0x75, 0xe0, 0x59, 0x97, 0xf7, 0x56,
	0x5d, 0xe6, 0x65, 0x35, 0x7a, 0x0f, 0xfe, 0x5b, 0xa9, 0xbf, 0x63, 0xb1, 0x25, 0xbb, 0xca, 0xb5,
	0xda, 0xc2, 0xb5, 0xc1, 0x4f, 0x68, 0x7f, 0x34, 0x18, 0x99, 0x92, 0x9a, 0xc5, 0xd0, 0x7e, 0x87,
	0xc4, 0x85, 0xbc, 0x56, 0x13, 0xb6, 0x8e, 0x12, 0x1e, 0xac, 0xd0, 0x31, 0x84, 0x87, 0xd0, 0x3d,
	0xc3, 0x1c, 0x09, 0xcb, 0x2d, 0x4f, 0x16, 0x1d, 0x2b, 0x04, 0xc3, 0x5e, 0xec, 0x7e, 0x93, 0xb8,
	0xfa, 0x4d, 0xe2, 0x73, 0xf3, 0x9b, 0x0c, 0xfe, 0x7a, 0xb0, 0xf3, 0x19, 0xb3, 0x74, 0x4c, 0x9a,
	0x25, 0xb0, 0x9f, 0x8c, 0x85, 0x4c, 0xf1, 0xf6, 0x61, 0xb3, 0x60, 0xd3, 0x6b, 0xdf, 0x04, 0xc8,
	0x86, 0xe0, 0x57, 0x20, 0xf6, 0x8e, 0x59, 0xef, 0xee, 0xa7, 0xb6, 0x11, 0xe0, 0x35, 0x40, 0x09,
	0x60, 0xe6, 0xec, 0xd1, 0x1d, 0x73, 0xbe, 0x71, 0xeb, 0x09, 0xb4, 0xdc, 0xd0, 0x2c, 0xfb, 0xb0,
	0x32, 0x46, 0xff, 0x5b, 0x78, 0xd9, 0xb2, 0x20, 0x27, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x47,
	0x8d, 0xbf, 0x0a, 0x87, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QuestionsClient is the client API for Questions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuestionsClient interface {
	GetRandom(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Cities, error)
	DeleteRandom(ctx context.Context, in *AnswerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type questionsClient struct {
	cc *grpc.ClientConn
}

func NewQuestionsClient(cc *grpc.ClientConn) QuestionsClient {
	return &questionsClient{cc}
}

func (c *questionsClient) GetRandom(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Cities, error) {
	out := new(Cities)
	err := c.cc.Invoke(ctx, "/internal.Questions/GetRandom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) DeleteRandom(ctx context.Context, in *AnswerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Questions/DeleteRandom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuestionsServer is the server API for Questions service.
type QuestionsServer interface {
	GetRandom(context.Context, *Token) (*Cities, error)
	DeleteRandom(context.Context, *AnswerRequest) (*empty.Empty, error)
}

// UnimplementedQuestionsServer can be embedded to have forward compatible implementations.
type UnimplementedQuestionsServer struct {
}

func (*UnimplementedQuestionsServer) GetRandom(ctx context.Context, req *Token) (*Cities, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandom not implemented")
}
func (*UnimplementedQuestionsServer) DeleteRandom(ctx context.Context, req *AnswerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRandom not implemented")
}

func RegisterQuestionsServer(s *grpc.Server, srv QuestionsServer) {
	s.RegisterService(&_Questions_serviceDesc, srv)
}

func _Questions_GetRandom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).GetRandom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Questions/GetRandom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).GetRandom(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_DeleteRandom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).DeleteRandom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Questions/DeleteRandom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).DeleteRandom(ctx, req.(*AnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Questions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.Questions",
	HandlerType: (*QuestionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRandom",
			Handler:    _Questions_GetRandom_Handler,
		},
		{
			MethodName: "DeleteRandom",
			Handler:    _Questions_DeleteRandom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}

// WeightsClient is the client API for Weights service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WeightsClient interface {
	ChangeContinent(ctx context.Context, in *ContinentDelta, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeCountry(ctx context.Context, in *CountryDelta, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeCity(ctx context.Context, in *CityDelta, opts ...grpc.CallOption) (*empty.Empty, error)
	Result(ctx context.Context, in *ResultRequest, opts ...grpc.CallOption) (*Cities, error)
}

type weightsClient struct {
	cc *grpc.ClientConn
}

func NewWeightsClient(cc *grpc.ClientConn) WeightsClient {
	return &weightsClient{cc}
}

func (c *weightsClient) ChangeContinent(ctx context.Context, in *ContinentDelta, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Weights/ChangeContinent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *weightsClient) ChangeCountry(ctx context.Context, in *CountryDelta, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Weights/ChangeCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *weightsClient) ChangeCity(ctx context.Context, in *CityDelta, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Weights/ChangeCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *weightsClient) Result(ctx context.Context, in *ResultRequest, opts ...grpc.CallOption) (*Cities, error) {
	out := new(Cities)
	err := c.cc.Invoke(ctx, "/internal.Weights/Result", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WeightsServer is the server API for Weights service.
type WeightsServer interface {
	ChangeContinent(context.Context, *ContinentDelta) (*empty.Empty, error)
	ChangeCountry(context.Context, *CountryDelta) (*empty.Empty, error)
	ChangeCity(context.Context, *CityDelta) (*empty.Empty, error)
	Result(context.Context, *ResultRequest) (*Cities, error)
}

// UnimplementedWeightsServer can be embedded to have forward compatible implementations.
type UnimplementedWeightsServer struct {
}

func (*UnimplementedWeightsServer) ChangeContinent(ctx context.Context, req *ContinentDelta) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeContinent not implemented")
}
func (*UnimplementedWeightsServer) ChangeCountry(ctx context.Context, req *CountryDelta) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCountry not implemented")
}
func (*UnimplementedWeightsServer) ChangeCity(ctx context.Context, req *CityDelta) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCity not implemented")
}
func (*UnimplementedWeightsServer) Result(ctx context.Context, req *ResultRequest) (*Cities, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Result not implemented")
}

func RegisterWeightsServer(s *grpc.Server, srv WeightsServer) {
	s.RegisterService(&_Weights_serviceDesc, srv)
}

func _Weights_ChangeContinent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContinentDelta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).ChangeContinent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/ChangeContinent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).ChangeContinent(ctx, req.(*ContinentDelta))
	}
	return interceptor(ctx, in, info, handler)
}

func _Weights_ChangeCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountryDelta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).ChangeCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/ChangeCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).ChangeCountry(ctx, req.(*CountryDelta))
	}
	return interceptor(ctx, in, info, handler)
}

func _Weights_ChangeCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityDelta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).ChangeCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/ChangeCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).ChangeCity(ctx, req.(*CityDelta))
	}
	return interceptor(ctx, in, info, handler)
}

func _Weights_Result_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeightsServer).Result(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Weights/Result",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeightsServer).Result(ctx, req.(*ResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Weights_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.Weights",
	HandlerType: (*WeightsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeContinent",
			Handler:    _Weights_ChangeContinent_Handler,
		},
		{
			MethodName: "ChangeCountry",
			Handler:    _Weights_ChangeCountry_Handler,
		},
		{
			MethodName: "ChangeCity",
			Handler:    _Weights_ChangeCity_Handler,
		},
		{
			MethodName: "Result",
			Handler:    _Weights_Result_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
