// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autocomplete.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type City struct {
	Iata                 string   `protobuf:"bytes,1,opt,name=iata,proto3" json:"iata,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CountryName          string   `protobuf:"bytes,3,opt,name=countryName,proto3" json:"countryName,omitempty"`
	PhotoUrl             string   `protobuf:"bytes,4,opt,name=photoUrl,proto3" json:"photoUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *City) Reset()         { *m = City{} }
func (m *City) String() string { return proto.CompactTextString(m) }
func (*City) ProtoMessage()    {}
func (*City) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a85e241386fcd45, []int{0}
}

func (m *City) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_City.Unmarshal(m, b)
}
func (m *City) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_City.Marshal(b, m, deterministic)
}
func (m *City) XXX_Merge(src proto.Message) {
	xxx_messageInfo_City.Merge(m, src)
}
func (m *City) XXX_Size() int {
	return xxx_messageInfo_City.Size(m)
}
func (m *City) XXX_DiscardUnknown() {
	xxx_messageInfo_City.DiscardUnknown(m)
}

var xxx_messageInfo_City proto.InternalMessageInfo

func (m *City) GetIata() string {
	if m != nil {
		return m.Iata
	}
	return ""
}

func (m *City) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *City) GetCountryName() string {
	if m != nil {
		return m.CountryName
	}
	return ""
}

func (m *City) GetPhotoUrl() string {
	if m != nil {
		return m.PhotoUrl
	}
	return ""
}

type Cities struct {
	Values               []*City  `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cities) Reset()         { *m = Cities{} }
func (m *Cities) String() string { return proto.CompactTextString(m) }
func (*Cities) ProtoMessage()    {}
func (*Cities) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a85e241386fcd45, []int{1}
}

func (m *Cities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cities.Unmarshal(m, b)
}
func (m *Cities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cities.Marshal(b, m, deterministic)
}
func (m *Cities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cities.Merge(m, src)
}
func (m *Cities) XXX_Size() int {
	return xxx_messageInfo_Cities.Size(m)
}
func (m *Cities) XXX_DiscardUnknown() {
	xxx_messageInfo_Cities.DiscardUnknown(m)
}

var xxx_messageInfo_Cities proto.InternalMessageInfo

func (m *Cities) GetValues() []*City {
	if m != nil {
		return m.Values
	}
	return nil
}

type CityAutocomplete struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	CountryCode          string   `protobuf:"bytes,2,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CityAutocomplete) Reset()         { *m = CityAutocomplete{} }
func (m *CityAutocomplete) String() string { return proto.CompactTextString(m) }
func (*CityAutocomplete) ProtoMessage()    {}
func (*CityAutocomplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a85e241386fcd45, []int{2}
}

func (m *CityAutocomplete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityAutocomplete.Unmarshal(m, b)
}
func (m *CityAutocomplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityAutocomplete.Marshal(b, m, deterministic)
}
func (m *CityAutocomplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityAutocomplete.Merge(m, src)
}
func (m *CityAutocomplete) XXX_Size() int {
	return xxx_messageInfo_CityAutocomplete.Size(m)
}
func (m *CityAutocomplete) XXX_DiscardUnknown() {
	xxx_messageInfo_CityAutocomplete.DiscardUnknown(m)
}

var xxx_messageInfo_CityAutocomplete proto.InternalMessageInfo

func (m *CityAutocomplete) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CityAutocomplete) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

type Country struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a85e241386fcd45, []int{3}
}

func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (m *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(m, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Country) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Countries struct {
	Values               []*Country `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Countries) Reset()         { *m = Countries{} }
func (m *Countries) String() string { return proto.CompactTextString(m) }
func (*Countries) ProtoMessage()    {}
func (*Countries) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a85e241386fcd45, []int{4}
}

func (m *Countries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Countries.Unmarshal(m, b)
}
func (m *Countries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Countries.Marshal(b, m, deterministic)
}
func (m *Countries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Countries.Merge(m, src)
}
func (m *Countries) XXX_Size() int {
	return xxx_messageInfo_Countries.Size(m)
}
func (m *Countries) XXX_DiscardUnknown() {
	xxx_messageInfo_Countries.DiscardUnknown(m)
}

var xxx_messageInfo_Countries proto.InternalMessageInfo

func (m *Countries) GetValues() []*Country {
	if m != nil {
		return m.Values
	}
	return nil
}

type CountryAutocomplete struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	OriginIata           string   `protobuf:"bytes,2,opt,name=originIata,proto3" json:"originIata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountryAutocomplete) Reset()         { *m = CountryAutocomplete{} }
func (m *CountryAutocomplete) String() string { return proto.CompactTextString(m) }
func (*CountryAutocomplete) ProtoMessage()    {}
func (*CountryAutocomplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a85e241386fcd45, []int{5}
}

func (m *CountryAutocomplete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryAutocomplete.Unmarshal(m, b)
}
func (m *CountryAutocomplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryAutocomplete.Marshal(b, m, deterministic)
}
func (m *CountryAutocomplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryAutocomplete.Merge(m, src)
}
func (m *CountryAutocomplete) XXX_Size() int {
	return xxx_messageInfo_CountryAutocomplete.Size(m)
}
func (m *CountryAutocomplete) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryAutocomplete.DiscardUnknown(m)
}

var xxx_messageInfo_CountryAutocomplete proto.InternalMessageInfo

func (m *CountryAutocomplete) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CountryAutocomplete) GetOriginIata() string {
	if m != nil {
		return m.OriginIata
	}
	return ""
}

func init() {
	proto.RegisterType((*City)(nil), "internal.City")
	proto.RegisterType((*Cities)(nil), "internal.Cities")
	proto.RegisterType((*CityAutocomplete)(nil), "internal.CityAutocomplete")
	proto.RegisterType((*Country)(nil), "internal.Country")
	proto.RegisterType((*Countries)(nil), "internal.Countries")
	proto.RegisterType((*CountryAutocomplete)(nil), "internal.CountryAutocomplete")
}

func init() { proto.RegisterFile("autocomplete.proto", fileDescriptor_8a85e241386fcd45) }

var fileDescriptor_8a85e241386fcd45 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0xa9, 0x9b, 0x75, 0xfb, 0x26, 0x32, 0x33, 0x0f, 0xa5, 0xa0, 0x94, 0x1e, 0x64, 0x5e,
	0x8a, 0x4e, 0xf1, 0xe6, 0x41, 0x7b, 0x52, 0xc1, 0xc3, 0xc0, 0x8b, 0xb7, 0x58, 0x83, 0x06, 0xb2,
	0xa4, 0xa4, 0xa9, 0xb0, 0xb3, 0xff, 0xb8, 0x7c, 0x49, 0x56, 0xd3, 0xe9, 0xc1, 0xdb, 0xf7, 0xde,
	0x4b, 0xd2, 0xdf, 0x6b, 0x02, 0x84, 0xb6, 0x46, 0x55, 0x6a, 0x55, 0x0b, 0x66, 0x58, 0x51, 0x6b,
	0x65, 0x14, 0x19, 0x71, 0x69, 0x98, 0x96, 0x54, 0xe4, 0x02, 0x86, 0x25, 0x37, 0x6b, 0x42, 0x60,
	0xc8, 0xa9, 0xa1, 0x49, 0x94, 0x45, 0xf3, 0xf1, 0xd2, 0xce, 0xe8, 0x49, 0xba, 0x62, 0xc9, 0x8e,
	0xf3, 0x70, 0x26, 0x19, 0x4c, 0x2a, 0xd5, 0x4a, 0xa3, 0xd7, 0x4f, 0x18, 0x0d, 0x6c, 0x14, 0x5a,
	0x24, 0x85, 0x51, 0xfd, 0xa1, 0x8c, 0x7a, 0xd6, 0x22, 0x19, 0xda, 0xb8, 0xd3, 0xf9, 0x39, 0xc4,
	0x25, 0x37, 0x9c, 0x35, 0xe4, 0x14, 0xe2, 0x4f, 0x2a, 0x5a, 0xd6, 0x24, 0x51, 0x36, 0x98, 0x4f,
	0x16, 0x07, 0xc5, 0x06, 0xa9, 0x40, 0x9e, 0xa5, 0x4f, 0xf3, 0x07, 0x98, 0xa2, 0xbe, 0x0d, 0x3a,
	0x90, 0x23, 0xd8, 0xb5, 0xa9, 0x87, 0x75, 0x22, 0x20, 0x2b, 0xd5, 0xdb, 0x06, 0x3a, 0xb4, 0xf2,
	0x0b, 0xd8, 0x2b, 0x9d, 0xc4, 0x6a, 0x15, 0xae, 0xf2, 0x75, 0x71, 0xfe, 0xab, 0x6e, 0x7e, 0x0d,
	0x63, 0xb7, 0x05, 0x99, 0xcf, 0xb6, 0x98, 0x0f, 0x03, 0x66, 0x77, 0x6e, 0x87, 0xfd, 0x08, 0x33,
	0x6f, 0xfd, 0x83, 0xfc, 0x04, 0x40, 0x69, 0xfe, 0xce, 0xe5, 0x3d, 0xde, 0x80, 0xfb, 0x7c, 0xe0,
	0x2c, 0xbe, 0x22, 0xd8, 0xef, 0x1d, 0x73, 0xe5, 0x2f, 0x2d, 0xed, 0xff, 0xb4, 0x70, 0x4d, 0x3a,
	0xed, 0x65, 0x88, 0x7f, 0xf3, 0x53, 0xff, 0xf8, 0x17, 0x79, 0x6f, 0xef, 0x6c, 0x3b, 0xe6, 0xac,
	0xb9, 0x83, 0x97, 0xee, 0xd5, 0xbc, 0xc6, 0xf6, 0x19, 0x5d, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x87, 0xb5, 0xd3, 0x45, 0x5c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AutocompleteClient is the client API for Autocomplete service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AutocompleteClient interface {
	// Returns proposals for cities in the specified country.
	// If country is omit then returns proposals for all cities.
	City(ctx context.Context, in *CityAutocomplete, opts ...grpc.CallOption) (*Cities, error)
	Country(ctx context.Context, in *CountryAutocomplete, opts ...grpc.CallOption) (*Countries, error)
}

type autocompleteClient struct {
	cc *grpc.ClientConn
}

func NewAutocompleteClient(cc *grpc.ClientConn) AutocompleteClient {
	return &autocompleteClient{cc}
}

func (c *autocompleteClient) City(ctx context.Context, in *CityAutocomplete, opts ...grpc.CallOption) (*Cities, error) {
	out := new(Cities)
	err := c.cc.Invoke(ctx, "/internal.Autocomplete/City", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autocompleteClient) Country(ctx context.Context, in *CountryAutocomplete, opts ...grpc.CallOption) (*Countries, error) {
	out := new(Countries)
	err := c.cc.Invoke(ctx, "/internal.Autocomplete/Country", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AutocompleteServer is the server API for Autocomplete service.
type AutocompleteServer interface {
	// Returns proposals for cities in the specified country.
	// If country is omit then returns proposals for all cities.
	City(context.Context, *CityAutocomplete) (*Cities, error)
	Country(context.Context, *CountryAutocomplete) (*Countries, error)
}

// UnimplementedAutocompleteServer can be embedded to have forward compatible implementations.
type UnimplementedAutocompleteServer struct {
}

func (*UnimplementedAutocompleteServer) City(ctx context.Context, req *CityAutocomplete) (*Cities, error) {
	return nil, status.Errorf(codes.Unimplemented, "method City not implemented")
}
func (*UnimplementedAutocompleteServer) Country(ctx context.Context, req *CountryAutocomplete) (*Countries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Country not implemented")
}

func RegisterAutocompleteServer(s *grpc.Server, srv AutocompleteServer) {
	s.RegisterService(&_Autocomplete_serviceDesc, srv)
}

func _Autocomplete_City_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityAutocomplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutocompleteServer).City(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Autocomplete/City",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutocompleteServer).City(ctx, req.(*CityAutocomplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Autocomplete_Country_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountryAutocomplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutocompleteServer).Country(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Autocomplete/Country",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutocompleteServer).Country(ctx, req.(*CountryAutocomplete))
	}
	return interceptor(ctx, in, info, handler)
}

var _Autocomplete_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.Autocomplete",
	HandlerType: (*AutocompleteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "City",
			Handler:    _Autocomplete_City_Handler,
		},
		{
			MethodName: "Country",
			Handler:    _Autocomplete_Country_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "autocomplete.proto",
}
